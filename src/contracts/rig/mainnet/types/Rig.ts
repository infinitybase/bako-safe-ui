/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.98.0
*/

import type {
  Account,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
  Provider,
  StdString,
  StorageSlot,
} from 'fuels';
import { Contract, Interface } from 'fuels';

import type { Enum, Option } from './common';

export enum AccessErrorInput {
  NotOwner = 'NotOwner',
}
export enum AccessErrorOutput {
  NotOwner = 'NotOwner',
}
export type IdentityInput = Enum<{
  Address: AddressInput;
  ContractId: ContractIdInput;
}>;
export type IdentityOutput = Enum<{
  Address: AddressOutput;
  ContractId: ContractIdOutput;
}>;
export enum InitializationErrorInput {
  CannotReinitialized = 'CannotReinitialized',
}
export enum InitializationErrorOutput {
  CannotReinitialized = 'CannotReinitialized',
}
export enum ReentrancyErrorInput {
  NonReentrant = 'NonReentrant',
}
export enum ReentrancyErrorOutput {
  NonReentrant = 'NonReentrant',
}
export type RigErrorInput = Enum<{
  BadAsset: [];
  BadMigration: undefined;
  AlreadyInitialized: undefined;
  NotInitialized: undefined;
  Overflow: undefined;
  NoStakingDeposits: undefined;
  NotOperator: undefined;
  RigIsPaused: undefined;
  RigIsNotPaused: undefined;
  InvalidPauser: undefined;
  PriceIsStale: undefined;
  InsufficientAmountOut: undefined;
}>;
export type RigErrorOutput = Enum<{
  BadAsset: [];
  BadMigration: void;
  AlreadyInitialized: void;
  NotInitialized: void;
  Overflow: void;
  NoStakingDeposits: void;
  NotOperator: void;
  RigIsPaused: void;
  RigIsNotPaused: void;
  InvalidPauser: void;
  PriceIsStale: void;
  InsufficientAmountOut: void;
}>;
export enum SetMetadataErrorInput {
  EmptyString = 'EmptyString',
  EmptyBytes = 'EmptyBytes',
}
export enum SetMetadataErrorOutput {
  EmptyString = 'EmptyString',
  EmptyBytes = 'EmptyBytes',
}
export type StateInput = Enum<{
  Uninitialized: undefined;
  Initialized: IdentityInput;
  Revoked: undefined;
}>;
export type StateOutput = Enum<{
  Uninitialized: void;
  Initialized: IdentityOutput;
  Revoked: void;
}>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type DepositEventInput = {
  sender: IdentityInput;
  referral: Option<IdentityInput>;
  amount_deposited: BigNumberish;
  amount_minted: BigNumberish;
};
export type DepositEventOutput = {
  sender: IdentityOutput;
  referral: Option<IdentityOutput>;
  amount_deposited: BN;
  amount_minted: BN;
};
export type InitialSetupEventInput = {
  l1_rig_address: string;
  initial_owner: IdentityInput;
  pauser: IdentityInput;
  max_stale_time: BigNumberish;
};
export type InitialSetupEventOutput = {
  l1_rig_address: string;
  initial_owner: IdentityOutput;
  pauser: IdentityOutput;
  max_stale_time: BN;
};
export type OperatorAddressUpdatedEventInput = {
  operator_address: IdentityInput;
  is_operator: boolean;
};
export type OperatorAddressUpdatedEventOutput = {
  operator_address: IdentityOutput;
  is_operator: boolean;
};
export type OwnershipSetInput = { new_owner: IdentityInput };
export type OwnershipSetOutput = { new_owner: IdentityOutput };
export type OwnershipTransferredInput = {
  new_owner: IdentityInput;
  previous_owner: IdentityInput;
};
export type OwnershipTransferredOutput = {
  new_owner: IdentityOutput;
  previous_owner: IdentityOutput;
};
export type PausedUpdateEventInput = { paused: boolean };
export type PausedUpdateEventOutput = PausedUpdateEventInput;
export type PauserUpdateEventInput = { pauser: IdentityInput };
export type PauserUpdateEventOutput = { pauser: IdentityOutput };
export type SetDecimalsEventInput = {
  asset: AssetIdInput;
  decimals: BigNumberish;
  sender: IdentityInput;
};
export type SetDecimalsEventOutput = {
  asset: AssetIdOutput;
  decimals: number;
  sender: IdentityOutput;
};
export type SetL1RigAddressEventInput = { l1_rig_address: string };
export type SetL1RigAddressEventOutput = SetL1RigAddressEventInput;
export type SetMaxStaleTimeEventInput = { max_stale_time: BigNumberish };
export type SetMaxStaleTimeEventOutput = { max_stale_time: BN };
export type SetNameEventInput = {
  asset: AssetIdInput;
  name: Option<StdString>;
  sender: IdentityInput;
};
export type SetNameEventOutput = {
  asset: AssetIdOutput;
  name: Option<StdString>;
  sender: IdentityOutput;
};
export type SetPriceFeedContractEventInput = {
  price_feed_contract: ContractIdInput;
};
export type SetPriceFeedContractEventOutput = {
  price_feed_contract: ContractIdOutput;
};
export type SetSymbolEventInput = {
  asset: AssetIdInput;
  symbol: Option<StdString>;
  sender: IdentityInput;
};
export type SetSymbolEventOutput = {
  asset: AssetIdOutput;
  symbol: Option<StdString>;
  sender: IdentityOutput;
};
export type WithdrawEventInput = { amount_withdrawn: BigNumberish };
export type WithdrawEventOutput = { amount_withdrawn: BN };

export type RigConfigurables = Partial<{
  L1_TOKEN_ADDRESS: string;
  L2_BRIDGE_CONTRACT: ContractIdInput;
  L2_ASSET_ID: Option<AssetIdInput>;
  INITIAL_OWNER: IdentityInput;
  NAME: string;
  SYMBOL: string;
  DECIMALS: BigNumberish;
}>;

const abi = {
  programType: 'contract',
  specVersion: '1',
  encodingVersion: '1',
  concreteTypes: [
    {
      type: '()',
      concreteTypeId:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
    },
    {
      type: 'b256',
      concreteTypeId:
        '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
    },
    {
      type: 'bool',
      concreteTypeId:
        'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
    },
    {
      type: 'enum errors::RigError',
      concreteTypeId:
        'c78ac89d0034509430ed0e0a71dc58ebc9c628a01e37fd6046dcc7cfcfc2d411',
      metadataTypeId: 1,
    },
    {
      type: 'enum standards::src5::AccessError',
      concreteTypeId:
        '3f702ea3351c9c1ece2b84048006c8034a24cbc2bad2e740d0412b4172951d3d',
      metadataTypeId: 2,
    },
    {
      type: 'enum standards::src5::State',
      concreteTypeId:
        '192bc7098e2fe60635a9918afb563e4e5419d386da2bdbf0d716b4bc8549802c',
      metadataTypeId: 3,
    },
    {
      type: 'enum std::identity::Identity',
      concreteTypeId:
        'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
      metadataTypeId: 4,
    },
    {
      type: 'enum std::option::Option<enum std::identity::Identity>',
      concreteTypeId:
        '253aea1197e8005518365bd24c8bc31f73a434fac0f7350e57696edfdd4850c2',
      metadataTypeId: 5,
      typeArguments: [
        'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
      ],
    },
    {
      type: 'enum std::option::Option<struct std::asset_id::AssetId>',
      concreteTypeId:
        '191bf2140761b3c5ab6c43992d162bb3dc9d7f2272b2ee5f5eeea411ddedcd32',
      metadataTypeId: 5,
      typeArguments: [
        'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
      ],
    },
    {
      type: 'enum std::option::Option<struct std::string::String>',
      concreteTypeId:
        '7c06d929390a9aeeb8ffccf8173ac0d101a9976d99dda01cce74541a81e75ac0',
      metadataTypeId: 5,
      typeArguments: [
        '9a7f1d3e963c10e0a4ea70a8e20a4813d1dc5682e28f74cb102ae50d32f7f98c',
      ],
    },
    {
      type: 'enum std::option::Option<u64>',
      concreteTypeId:
        'd852149004cc9ec0bbe7dc4e37bffea1d41469b759512b6136f2e865a4c06e7d',
      metadataTypeId: 5,
      typeArguments: [
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
      ],
    },
    {
      type: 'enum std::option::Option<u8>',
      concreteTypeId:
        '2da102c46c7263beeed95818cd7bee801716ba8303dddafdcd0f6c9efda4a0f1',
      metadataTypeId: 5,
      typeArguments: [
        'c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b',
      ],
    },
    {
      type: 'enum sway_libs::asset::errors::SetMetadataError',
      concreteTypeId:
        'c6c09c148c1a1341c7ab81697b3545cc695fa67668a169cddc59790a9a0b6b44',
      metadataTypeId: 6,
    },
    {
      type: 'enum sway_libs::ownership::errors::InitializationError',
      concreteTypeId:
        '1dfe7feadc1d9667a4351761230f948744068a090fe91b1bc6763a90ed5d3893',
      metadataTypeId: 7,
    },
    {
      type: 'enum sway_libs::reentrancy::errors::ReentrancyError',
      concreteTypeId:
        '4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038',
      metadataTypeId: 8,
    },
    {
      type: 'str[18]',
      concreteTypeId:
        '58917167d101d95177bf16f9bb6db90f521ee1af6337127222eda49f2066c4bb',
    },
    {
      type: 'str[6]',
      concreteTypeId:
        'ed705f920eb2c423c81df912430030def10f03218f0a064bfab81b68de71ae21',
    },
    {
      type: 'struct events::DepositEvent',
      concreteTypeId:
        'aeb9b947da259c606e2c25be1150e2150f609fe5f2ec593c9a7ebb771e4e7065',
      metadataTypeId: 11,
    },
    {
      type: 'struct events::InitialSetupEvent',
      concreteTypeId:
        'f3e3dd99686bcd3fd6cb9950ef677dd949eb46930ebf6a28c740028bc29ba25d',
      metadataTypeId: 12,
    },
    {
      type: 'struct events::OperatorAddressUpdatedEvent',
      concreteTypeId:
        '209e9e29f72e5132f202c0d679b51ef0dcf2b75f72b144f6cb2a644b65ada95d',
      metadataTypeId: 13,
    },
    {
      type: 'struct events::PausedUpdateEvent',
      concreteTypeId:
        '51e627badf42837aa5c0d9b84a0ac4485618106a1e70d522a9a60a7b3a776add',
      metadataTypeId: 14,
    },
    {
      type: 'struct events::PauserUpdateEvent',
      concreteTypeId:
        '7f71313a989dcbc4a0cfd478ede8cf0cc493f743e6741fd3926f6df32da25a53',
      metadataTypeId: 15,
    },
    {
      type: 'struct events::SetL1RigAddressEvent',
      concreteTypeId:
        'bd356da786bf056741dae29349ade6added8ddfb7370912d7f9af454973dfbd3',
      metadataTypeId: 16,
    },
    {
      type: 'struct events::SetMaxStaleTimeEvent',
      concreteTypeId:
        '1736851d1d585cde3bf8c5098ba201f269aca4acc8a509ad34bc32afdad54626',
      metadataTypeId: 17,
    },
    {
      type: 'struct events::SetPriceFeedContractEvent',
      concreteTypeId:
        '220dc82b54b16dd24a373f74b0115fa7c583b360b5a3a8086e36e6ae32142ceb',
      metadataTypeId: 18,
    },
    {
      type: 'struct events::WithdrawEvent',
      concreteTypeId:
        '9787083b0003f388ec6bf30609ff6a10c76fada67314a162841a445b07a17168',
      metadataTypeId: 19,
    },
    {
      type: 'struct standards::src20::SetDecimalsEvent',
      concreteTypeId:
        'fbe071a6e7ca2b2b5e503e82638f9f11c861a6fb452b65473eca8260db87392d',
      metadataTypeId: 20,
    },
    {
      type: 'struct standards::src20::SetNameEvent',
      concreteTypeId:
        '6ce295b0fb4c1c15e8ed1cfa4babda47d8a04940a5266a3229e12243a2e37c2c',
      metadataTypeId: 21,
    },
    {
      type: 'struct standards::src20::SetSymbolEvent',
      concreteTypeId:
        'a8a4b78066c51a50da6349bd395fe1c67e774d75c1db2c5c22288a432d7a363d',
      metadataTypeId: 22,
    },
    {
      type: 'struct std::asset_id::AssetId',
      concreteTypeId:
        'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
      metadataTypeId: 24,
    },
    {
      type: 'struct std::contract_id::ContractId',
      concreteTypeId:
        '29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54',
      metadataTypeId: 27,
    },
    {
      type: 'struct std::string::String',
      concreteTypeId:
        '9a7f1d3e963c10e0a4ea70a8e20a4813d1dc5682e28f74cb102ae50d32f7f98c',
      metadataTypeId: 28,
    },
    {
      type: 'struct sway_libs::ownership::events::OwnershipSet',
      concreteTypeId:
        'e1ef35033ea9d2956f17c3292dea4a46ce7d61fdf37bbebe03b7b965073f43b5',
      metadataTypeId: 29,
    },
    {
      type: 'struct sway_libs::ownership::events::OwnershipTransferred',
      concreteTypeId:
        'b3fffbcb3158d7c010c31b194b60fb7857adb4ad61bdcf4b8b42958951d9f308',
      metadataTypeId: 30,
    },
    {
      type: 'u64',
      concreteTypeId:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
    },
    {
      type: 'u8',
      concreteTypeId:
        'c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b',
    },
  ],
  metadataTypes: [
    {
      type: '(_, _)',
      metadataTypeId: 0,
      components: [
        {
          name: '__tuple_element',
          typeId: 24,
        },
        {
          name: '__tuple_element',
          typeId: 24,
        },
      ],
    },
    {
      type: 'enum errors::RigError',
      metadataTypeId: 1,
      components: [
        {
          name: 'BadAsset',
          typeId: 0,
        },
        {
          name: 'BadMigration',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'AlreadyInitialized',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'NotInitialized',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'Overflow',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'NoStakingDeposits',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'NotOperator',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'RigIsPaused',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'RigIsNotPaused',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'InvalidPauser',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'PriceIsStale',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'InsufficientAmountOut',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
      ],
    },
    {
      type: 'enum standards::src5::AccessError',
      metadataTypeId: 2,
      components: [
        {
          name: 'NotOwner',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
      ],
    },
    {
      type: 'enum standards::src5::State',
      metadataTypeId: 3,
      components: [
        {
          name: 'Uninitialized',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'Initialized',
          typeId: 4,
        },
        {
          name: 'Revoked',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
      ],
    },
    {
      type: 'enum std::identity::Identity',
      metadataTypeId: 4,
      components: [
        {
          name: 'Address',
          typeId: 23,
        },
        {
          name: 'ContractId',
          typeId: 27,
        },
      ],
    },
    {
      type: 'enum std::option::Option',
      metadataTypeId: 5,
      components: [
        {
          name: 'None',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'Some',
          typeId: 9,
        },
      ],
      typeParameters: [9],
    },
    {
      type: 'enum sway_libs::asset::errors::SetMetadataError',
      metadataTypeId: 6,
      components: [
        {
          name: 'EmptyString',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
        {
          name: 'EmptyBytes',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
      ],
    },
    {
      type: 'enum sway_libs::ownership::errors::InitializationError',
      metadataTypeId: 7,
      components: [
        {
          name: 'CannotReinitialized',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
      ],
    },
    {
      type: 'enum sway_libs::reentrancy::errors::ReentrancyError',
      metadataTypeId: 8,
      components: [
        {
          name: 'NonReentrant',
          typeId:
            '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
        },
      ],
    },
    {
      type: 'generic T',
      metadataTypeId: 9,
    },
    {
      type: 'raw untyped ptr',
      metadataTypeId: 10,
    },
    {
      type: 'struct events::DepositEvent',
      metadataTypeId: 11,
      components: [
        {
          name: 'sender',
          typeId: 4,
        },
        {
          name: 'referral',
          typeId: 5,
          typeArguments: [
            {
              name: '',
              typeId: 4,
            },
          ],
        },
        {
          name: 'amount_deposited',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
        {
          name: 'amount_minted',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
    },
    {
      type: 'struct events::InitialSetupEvent',
      metadataTypeId: 12,
      components: [
        {
          name: 'l1_rig_address',
          typeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
        {
          name: 'initial_owner',
          typeId: 4,
        },
        {
          name: 'pauser',
          typeId: 4,
        },
        {
          name: 'max_stale_time',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
    },
    {
      type: 'struct events::OperatorAddressUpdatedEvent',
      metadataTypeId: 13,
      components: [
        {
          name: 'operator_address',
          typeId: 4,
        },
        {
          name: 'is_operator',
          typeId:
            'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
        },
      ],
    },
    {
      type: 'struct events::PausedUpdateEvent',
      metadataTypeId: 14,
      components: [
        {
          name: 'paused',
          typeId:
            'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
        },
      ],
    },
    {
      type: 'struct events::PauserUpdateEvent',
      metadataTypeId: 15,
      components: [
        {
          name: 'pauser',
          typeId: 4,
        },
      ],
    },
    {
      type: 'struct events::SetL1RigAddressEvent',
      metadataTypeId: 16,
      components: [
        {
          name: 'l1_rig_address',
          typeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
      ],
    },
    {
      type: 'struct events::SetMaxStaleTimeEvent',
      metadataTypeId: 17,
      components: [
        {
          name: 'max_stale_time',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
    },
    {
      type: 'struct events::SetPriceFeedContractEvent',
      metadataTypeId: 18,
      components: [
        {
          name: 'price_feed_contract',
          typeId: 27,
        },
      ],
    },
    {
      type: 'struct events::WithdrawEvent',
      metadataTypeId: 19,
      components: [
        {
          name: 'amount_withdrawn',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
    },
    {
      type: 'struct standards::src20::SetDecimalsEvent',
      metadataTypeId: 20,
      components: [
        {
          name: 'asset',
          typeId: 24,
        },
        {
          name: 'decimals',
          typeId:
            'c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b',
        },
        {
          name: 'sender',
          typeId: 4,
        },
      ],
    },
    {
      type: 'struct standards::src20::SetNameEvent',
      metadataTypeId: 21,
      components: [
        {
          name: 'asset',
          typeId: 24,
        },
        {
          name: 'name',
          typeId: 5,
          typeArguments: [
            {
              name: '',
              typeId: 28,
            },
          ],
        },
        {
          name: 'sender',
          typeId: 4,
        },
      ],
    },
    {
      type: 'struct standards::src20::SetSymbolEvent',
      metadataTypeId: 22,
      components: [
        {
          name: 'asset',
          typeId: 24,
        },
        {
          name: 'symbol',
          typeId: 5,
          typeArguments: [
            {
              name: '',
              typeId: 28,
            },
          ],
        },
        {
          name: 'sender',
          typeId: 4,
        },
      ],
    },
    {
      type: 'struct std::address::Address',
      metadataTypeId: 23,
      components: [
        {
          name: 'bits',
          typeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
      ],
    },
    {
      type: 'struct std::asset_id::AssetId',
      metadataTypeId: 24,
      components: [
        {
          name: 'bits',
          typeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
      ],
    },
    {
      type: 'struct std::bytes::Bytes',
      metadataTypeId: 25,
      components: [
        {
          name: 'buf',
          typeId: 26,
        },
        {
          name: 'len',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
    },
    {
      type: 'struct std::bytes::RawBytes',
      metadataTypeId: 26,
      components: [
        {
          name: 'ptr',
          typeId: 10,
        },
        {
          name: 'cap',
          typeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
    },
    {
      type: 'struct std::contract_id::ContractId',
      metadataTypeId: 27,
      components: [
        {
          name: 'bits',
          typeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
      ],
    },
    {
      type: 'struct std::string::String',
      metadataTypeId: 28,
      components: [
        {
          name: 'bytes',
          typeId: 25,
        },
      ],
    },
    {
      type: 'struct sway_libs::ownership::events::OwnershipSet',
      metadataTypeId: 29,
      components: [
        {
          name: 'new_owner',
          typeId: 4,
        },
      ],
    },
    {
      type: 'struct sway_libs::ownership::events::OwnershipTransferred',
      metadataTypeId: 30,
      components: [
        {
          name: 'new_owner',
          typeId: 4,
        },
        {
          name: 'previous_owner',
          typeId: 4,
        },
      ],
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: 'referral',
          concreteTypeId:
            '253aea1197e8005518365bd24c8bc31f73a434fac0f7350e57696edfdd4850c2',
        },
        {
          name: 'min_amount_out',
          concreteTypeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
      name: 'deposit',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'payable',
          arguments: [],
        },
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'amount',
          concreteTypeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
      name: 'get_amount_to_mint',
      output:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'get_asset_id',
      output:
        'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
      attributes: null,
    },
    {
      inputs: [],
      name: 'get_l1_rig_address',
      output:
        '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'get_l2_asset_id',
      output:
        'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
      attributes: null,
    },
    {
      inputs: [],
      name: 'get_max_stale_time',
      output:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'get_pauser_identity',
      output:
        'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'get_price_feed_contract',
      output:
        '29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'get_sanitized_price',
      output:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'get_sub_id',
      output:
        '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
      attributes: null,
    },
    {
      inputs: [],
      name: 'get_total_to_be_staked',
      output:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'l1_rig_address',
          concreteTypeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
        {
          name: 'pauser',
          concreteTypeId:
            'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
        },
        {
          name: 'max_stale_time',
          concreteTypeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
      name: 'initialize',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'doc-comment',
          arguments: [' --------------- RIG FUNCTIONS --------------- ///'],
        },
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'operator_address',
          concreteTypeId:
            'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
        },
      ],
      name: 'is_operator',
      output:
        'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
      attributes: [
        {
          name: 'doc-comment',
          arguments: [' --------------- GETTER FUNCTIONS --------------- ///'],
        },
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'is_paused',
      output:
        'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'pause',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'l1_rig_address',
          concreteTypeId:
            '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
        },
      ],
      name: 'set_l1_rig_address',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'max_stale_time',
          concreteTypeId:
            '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
        },
      ],
      name: 'set_max_stale_time',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'pauser',
          concreteTypeId:
            'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
        },
      ],
      name: 'set_pauser_identity',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'price_feed_contract',
          concreteTypeId:
            '29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54',
        },
      ],
      name: 'set_price_feed_contract',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'new_owner',
          concreteTypeId:
            'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
        },
      ],
      name: 'transfer_ownership',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'doc-comment',
          arguments: [' --------------- SETTER FUNCTIONS --------------- ///'],
        },
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [],
      name: 'unpause',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'operator_address',
          concreteTypeId:
            'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
        },
        {
          name: 'is_operator',
          concreteTypeId:
            'b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903',
        },
      ],
      name: 'update_operator_address',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [],
      name: 'withdraw_to_l1_rig',
      output:
        '2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read', 'write'],
        },
      ],
    },
    {
      inputs: [],
      name: 'owner',
      output:
        '192bc7098e2fe60635a9918afb563e4e5419d386da2bdbf0d716b4bc8549802c',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'asset',
          concreteTypeId:
            'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
        },
      ],
      name: 'decimals',
      output:
        '2da102c46c7263beeed95818cd7bee801716ba8303dddafdcd0f6c9efda4a0f1',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'asset',
          concreteTypeId:
            'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
        },
      ],
      name: 'name',
      output:
        '7c06d929390a9aeeb8ffccf8173ac0d101a9976d99dda01cce74541a81e75ac0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'asset',
          concreteTypeId:
            'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
        },
      ],
      name: 'symbol',
      output:
        '7c06d929390a9aeeb8ffccf8173ac0d101a9976d99dda01cce74541a81e75ac0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [],
      name: 'total_assets',
      output:
        '1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
    {
      inputs: [
        {
          name: 'asset',
          concreteTypeId:
            'c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974',
        },
      ],
      name: 'total_supply',
      output:
        'd852149004cc9ec0bbe7dc4e37bffea1d41469b759512b6136f2e865a4c06e7d',
      attributes: [
        {
          name: 'storage',
          arguments: ['read'],
        },
      ],
    },
  ],
  loggedTypes: [
    {
      logId: '5557842539076482339',
      concreteTypeId:
        '4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038',
    },
    {
      logId: '14378525336972578964',
      concreteTypeId:
        'c78ac89d0034509430ed0e0a71dc58ebc9c628a01e37fd6046dcc7cfcfc2d411',
    },
    {
      logId: '12590297951544646752',
      concreteTypeId:
        'aeb9b947da259c606e2c25be1150e2150f609fe5f2ec593c9a7ebb771e4e7065',
    },
    {
      logId: '2161305517876418151',
      concreteTypeId:
        '1dfe7feadc1d9667a4351761230f948744068a090fe91b1bc6763a90ed5d3893',
    },
    {
      logId: '16280289466020123285',
      concreteTypeId:
        'e1ef35033ea9d2956f17c3292dea4a46ce7d61fdf37bbebe03b7b965073f43b5',
    },
    {
      logId: '14321618427101975361',
      concreteTypeId:
        'c6c09c148c1a1341c7ab81697b3545cc695fa67668a169cddc59790a9a0b6b44',
    },
    {
      logId: '7845998088195677205',
      concreteTypeId:
        '6ce295b0fb4c1c15e8ed1cfa4babda47d8a04940a5266a3229e12243a2e37c2c',
    },
    {
      logId: '12152039456660331088',
      concreteTypeId:
        'a8a4b78066c51a50da6349bd395fe1c67e774d75c1db2c5c22288a432d7a363d',
    },
    {
      logId: '18149631459970394923',
      concreteTypeId:
        'fbe071a6e7ca2b2b5e503e82638f9f11c861a6fb452b65473eca8260db87392d',
    },
    {
      logId: '9183175242923494340',
      concreteTypeId:
        '7f71313a989dcbc4a0cfd478ede8cf0cc493f743e6741fd3926f6df32da25a53',
    },
    {
      logId: '17574133821881437503',
      concreteTypeId:
        'f3e3dd99686bcd3fd6cb9950ef677dd949eb46930ebf6a28c740028bc29ba25d',
    },
    {
      logId: '5901448045278692218',
      concreteTypeId:
        '51e627badf42837aa5c0d9b84a0ac4485618106a1e70d522a9a60a7b3a776add',
    },
    {
      logId: '4571204900286667806',
      concreteTypeId:
        '3f702ea3351c9c1ece2b84048006c8034a24cbc2bad2e740d0412b4172951d3d',
    },
    {
      logId: '13633924013221676391',
      concreteTypeId:
        'bd356da786bf056741dae29349ade6added8ddfb7370912d7f9af454973dfbd3',
    },
    {
      logId: '1672670671707593950',
      concreteTypeId:
        '1736851d1d585cde3bf8c5098ba201f269aca4acc8a509ad34bc32afdad54626',
    },
    {
      logId: '2453837460416851410',
      concreteTypeId:
        '220dc82b54b16dd24a373f74b0115fa7c583b360b5a3a8086e36e6ae32142ceb',
    },
    {
      logId: '12970362301975156672',
      concreteTypeId:
        'b3fffbcb3158d7c010c31b194b60fb7857adb4ad61bdcf4b8b42958951d9f308',
    },
    {
      logId: '2350489958611833138',
      concreteTypeId:
        '209e9e29f72e5132f202c0d679b51ef0dcf2b75f72b144f6cb2a644b65ada95d',
    },
    {
      logId: '10918704871079408520',
      concreteTypeId:
        '9787083b0003f388ec6bf30609ff6a10c76fada67314a162841a445b07a17168',
    },
  ],
  messagesTypes: [],
  configurables: [
    {
      name: 'L1_TOKEN_ADDRESS',
      concreteTypeId:
        '7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b',
      offset: 50816,
    },
    {
      name: 'L2_BRIDGE_CONTRACT',
      concreteTypeId:
        '29c10735d33b5159f0c71ee1dbd17b36a3e69e41f00fab0d42e1bd9f428d8a54',
      offset: 50888,
    },
    {
      name: 'L2_ASSET_ID',
      concreteTypeId:
        '191bf2140761b3c5ab6c43992d162bb3dc9d7f2272b2ee5f5eeea411ddedcd32',
      offset: 50848,
    },
    {
      name: 'INITIAL_OWNER',
      concreteTypeId:
        'ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335',
      offset: 50776,
    },
    {
      name: 'NAME',
      concreteTypeId:
        '58917167d101d95177bf16f9bb6db90f521ee1af6337127222eda49f2066c4bb',
      offset: 50920,
    },
    {
      name: 'SYMBOL',
      concreteTypeId:
        'ed705f920eb2c423c81df912430030def10f03218f0a064bfab81b68de71ae21',
      offset: 50944,
    },
    {
      name: 'DECIMALS',
      concreteTypeId:
        'c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b',
      offset: 50768,
    },
  ],
};

const storageSlots: StorageSlot[] = [
  {
    key: '193b245f25cfee5711ff9b89ccfe1bd087f6a591fde4e4c137493f97f1caf05b',
    value: '0000000000000001000000000000000000000000000000000000000000000000',
  },
  {
    key: '3f34697509c6410b64768e8483460a406ea26c8059cb76e2f7a4ceb856457985',
    value: '0000000000001c20000000000000000000000000000000000000000000000000',
  },
  {
    key: '4463bcf69ac1ce55bf63cfc7aafb366433d3e5d86c599daf8cc16d2a12fd74a2',
    value: '0000000000000000000000000000000000000000000000000000000000000000',
  },
  {
    key: '58bfe1350c7d666e2cd1540a0db2c3c549aa77e066269aa6823791b8ec523be7',
    value: '0000000000000000000000000000000000000000000000000000000000000000',
  },
  {
    key: '65a81cea68cc00e6e7985c11b38486e89a1e329f1a34f000ab3637b609f4be0f',
    value: '0000000000000000000000000000000000000000000000000000000000000000',
  },
  {
    key: 'b139f8d5c1fc85e2758af539154a10a01a79994da11a97de761887f0c87af0ea',
    value: '0000000000000000000000000000000000000000000000000000000000000000',
  },
  {
    key: 'b139f8d5c1fc85e2758af539154a10a01a79994da11a97de761887f0c87af0eb',
    value: '0000000000000000000000000000000000000000000000000000000000000000',
  },
  {
    key: 'ccd89816ea1854c4d07ad04dc54d42dc80168f38e94370a9c055fcc585f8f614',
    value: '0000000000000000000000000000000000000000000000000000000000000000',
  },
];

export class RigInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    deposit: FunctionFragment;
    get_amount_to_mint: FunctionFragment;
    get_asset_id: FunctionFragment;
    get_l1_rig_address: FunctionFragment;
    get_l2_asset_id: FunctionFragment;
    get_max_stale_time: FunctionFragment;
    get_pauser_identity: FunctionFragment;
    get_price_feed_contract: FunctionFragment;
    get_sanitized_price: FunctionFragment;
    get_sub_id: FunctionFragment;
    get_total_to_be_staked: FunctionFragment;
    initialize: FunctionFragment;
    is_operator: FunctionFragment;
    is_paused: FunctionFragment;
    pause: FunctionFragment;
    set_l1_rig_address: FunctionFragment;
    set_max_stale_time: FunctionFragment;
    set_pauser_identity: FunctionFragment;
    set_price_feed_contract: FunctionFragment;
    transfer_ownership: FunctionFragment;
    unpause: FunctionFragment;
    update_operator_address: FunctionFragment;
    withdraw_to_l1_rig: FunctionFragment;
    owner: FunctionFragment;
    decimals: FunctionFragment;
    name: FunctionFragment;
    symbol: FunctionFragment;
    total_assets: FunctionFragment;
    total_supply: FunctionFragment;
  };
}

export class Rig extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: RigInterface;
  declare functions: {
    deposit: InvokeFunction<
      [referral: Option<IdentityInput>, min_amount_out: BigNumberish],
      void
    >;
    get_amount_to_mint: InvokeFunction<[amount: BigNumberish], BN>;
    get_asset_id: InvokeFunction<[], AssetIdOutput>;
    get_l1_rig_address: InvokeFunction<[], string>;
    get_l2_asset_id: InvokeFunction<[], AssetIdOutput>;
    get_max_stale_time: InvokeFunction<[], BN>;
    get_pauser_identity: InvokeFunction<[], IdentityOutput>;
    get_price_feed_contract: InvokeFunction<[], ContractIdOutput>;
    get_sanitized_price: InvokeFunction<[], BN>;
    get_sub_id: InvokeFunction<[], string>;
    get_total_to_be_staked: InvokeFunction<[], BN>;
    initialize: InvokeFunction<
      [
        l1_rig_address: string,
        pauser: IdentityInput,
        max_stale_time: BigNumberish,
      ],
      void
    >;
    is_operator: InvokeFunction<[operator_address: IdentityInput], boolean>;
    is_paused: InvokeFunction<[], boolean>;
    pause: InvokeFunction<[], void>;
    set_l1_rig_address: InvokeFunction<[l1_rig_address: string], void>;
    set_max_stale_time: InvokeFunction<[max_stale_time: BigNumberish], void>;
    set_pauser_identity: InvokeFunction<[pauser: IdentityInput], void>;
    set_price_feed_contract: InvokeFunction<
      [price_feed_contract: ContractIdInput],
      void
    >;
    transfer_ownership: InvokeFunction<[new_owner: IdentityInput], void>;
    unpause: InvokeFunction<[], void>;
    update_operator_address: InvokeFunction<
      [operator_address: IdentityInput, is_operator: boolean],
      void
    >;
    withdraw_to_l1_rig: InvokeFunction<[], void>;
    owner: InvokeFunction<[], StateOutput>;
    decimals: InvokeFunction<[asset: AssetIdInput], Option<number>>;
    name: InvokeFunction<[asset: AssetIdInput], Option<StdString>>;
    symbol: InvokeFunction<[asset: AssetIdInput], Option<StdString>>;
    total_assets: InvokeFunction<[], BN>;
    total_supply: InvokeFunction<[asset: AssetIdInput], Option<BN>>;
  };

  constructor(id: string | Address, accountOrProvider: Account | Provider) {
    super(id, abi, accountOrProvider);
  }
}
